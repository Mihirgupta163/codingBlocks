/*
Take as input N, the size of array. Take N more inputs and store that in an array. Take N more inputs and store that in another array. Write a function which gives the intersection of two arrays in an ArrayList of integers and Print the ArrayList.

Input Format
First line contains N denoting the size of the two arrays. Second line contains N space separated integers denoting the elements of the first array. Third line contains N space separated integers denoting the elements of the second array.

Constraints
Length of Arrays should be between 1 to 100000.

Output Format
Display the repeating elements in a comma separated manner enclosed in square brackets. The numbers should be sorted in increasing order.

Sample Input
7
1 2 3 1 2 4 1
2 1 3 1 5 2 2
Sample Output
[1, 1, 2, 2, 3]
Explanation
Check which integer is present in both the arrays and add them in an array .Print this array as the ans. */
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main() 
{
	int n;
	cin>>n;
	int arr1[100000],arr2[100000];
	multiset<int> mp;
	for(int i=0;i<n;i++)
	{
	cin>>arr1[i];
	mp.insert(arr1[i]); 
	}
	multiset<int> s;
	for(int i=0;i<n;i++)
	{
	cin>>arr2[i];
	auto pos=mp.find(arr2[i]); 
		if(pos!=mp.end())		 // check condition for multiset
		{						
		s.insert(*pos);
		mp.erase(pos);        //only erase the itr in multiset ot value
		}
	}
	cout<<"[";
	for(auto x=s.begin();x!=s.end();x++)
	{
	cout<<*x;
	auto rit=x;
	if(++rit!=s.end())
	cout<<", ";

	}
	cout<<"]"; 
	

	return 0;
}
